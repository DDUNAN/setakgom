<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.mapper.QnaMapper">

	<resultMap type="com.spring.community.QnaVO" id="qnaMap">
		<result property="QNA_NUM" column="qna_num"/>
		<result property="MEMBER_ID" column="member_id"/>
		<result property="QNA_TYPE" column="qna_type"/>
		<result property="QNA_KIND" column="qna_kind"/>
		<result property="QNA_TITLE" column="qna_title"/>
		<result property="QNA_CONTENT" column="qna_content"/>
		<result property="QNA_DATE" column="qna_date"/>
		<result property="QNA_FILE" column="qna_file"/>
		<result property="QNA_CHECK" column="qna_check"/>
		<result property="QNA_SCR" column="qna_scr"/>
		<result property="QNA_PASS" column="qna_pass"/>
	</resultMap>
	
	<select id="getListCount" resultType="int">
		SELECT COUNT(*) FROM QNA
	</select>
	
	<select id="getQnaList" parameterType="com.spring.community.QnaVO" resultMap="qnaMap">
		<![CDATA[SELECT * FROM (SELECT rownum rnum, QNA_NUM, MEMBER_ID, QNA_TYPE, QNA_KIND,
		 QNA_TITLE, QNA_CONTENT, QNA_DATE, QNA_FILE, QNA_CHECK, QNA_SCR, QNA_PASS FROM (SELECT * FROM QNA ORDER BY QNA_NUM desc ))
		 WHERE rnum>=#{arg0} and rnum<=#{arg1}]]>
	</select>
	
	<select id="getDetail" parameterType="com.spring.community.QnaVO" resultType="com.spring.community.QnaVO">
		select * from QNA where QNA_NUM = #{QNA_NUM}
	</select>
			
	<insert id="qnaInsert" parameterType="com.spring.community.QnaVO">
		insert into QNA values 
		(
		QNA_SEQ.NEXTVAL, 
		#{MEMBER_ID, jdbcType=VARCHAR}, 
		#{QNA_TYPE, jdbcType=VARCHAR},
		#{QNA_KIND, jdbcType=VARCHAR},
		#{QNA_TITLE, jdbcType=VARCHAR},
		#{QNA_CONTENT, jdbcType=VARCHAR}, 
		sysdate, 
		#{QNA_FILE,jdbcType=VARCHAR}, 
		#{QNA_CHECK,jdbcType=VARCHAR},			
		#{QNA_SCR,jdbcType=VARCHAR},
		#{QNA_PASS,jdbcType=VARCHAR}
		)		
	</insert>
	
	<!-- <select id="getMaxNum" resultType="int">
		select max(QNA_NUM) from QNA
	</select> -->


	<update id="qnaModify" parameterType="com.spring.community.QnaVO">
		update QNA set
		QNA_TYPE=#{QNA_TYPE,jdbcType=VARCHAR},
		QNA_KIND=#{QNA_KIND,jdbcType=VARCHAR},
		QNA_TITLE=#{QNA_TITLE,jdbcType=VARCHAR}, 		
		QNA_CONTENT=#{QNA_CONTENT,jdbcType=VARCHAR},
		QNA_FILE=#{QNA_FILE,jdbcType=VARCHAR}, 
		QNA_CHECK=#{QNA_CHECK,jdbcType=VARCHAR},	
		QNA_SCR=#{QNA_SCR,jdbcType=VARCHAR},	
		QNA_PASS=#{QNA_PASS,jdbcType=VARCHAR}	
		where QNA_NUM=#{QNA_NUM}
	</update>
	
	<delete id="qnaDelete" parameterType="com.spring.community.QnaVO">
		delete from QNA where QNA_NUM = #{QNA_NUM}
	</delete>	
	
	<select id="qnaPassChk" parameterType="int" resultType="String">
		select qna_pass from qna where qna_num=#{qna_num}
	</select> 
	
	
	
	<!-- <update id="setReadCountUpdate" parameterType="com.spring.springqna.QnaVO">
		update QNA set NOTICE_READCOUNT= NOTICE_READCOUNT+1 where NOTICE_NUM=#{NOTICE_NUM}		
	</update> -->	
	

	
	<!-- 
	<select id="isNoticeWriter" parameterType="com.spring.springqna.QnaVO" resultMap="qnaMap">
		select * from QNA where NOTICE_NUM=#{arg0}
	</select>
 -->
	
	<!-- 기응 -->
	
	<select id="selectQnalist" parameterType="HashMap" resultMap="qnaMap">
		<![CDATA[SELECT * FROM (SELECT rownum rnum, QNA_NUM, MEMBER_ID, QNA_TYPE, QNA_KIND,
		 QNA_TITLE, QNA_CONTENT, QNA_DATE, QNA_FILE, QNA_CHECK FROM (SELECT * FROM QNA ORDER BY QNA_NUM asc))
		 WHERE rnum>=#{startrow} and rnum<=#{endrow} and member_id = #{member_id}]]>
	</select>
</mapper>


